/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "com_demo_opencvdemos_TwoActivity.h"
#include <opencv2/core.hpp>
#include <opencv2/imgproc.hpp>
#include <opencv2/features2d.hpp>
#include <vector>

using namespace std;
using namespace cv;

#ifdef __cplusplus
extern "C" {
#endif
#undef com_demo_opencvdemos_TwoActivity_VIEW_MODE_RGBA
#define com_demo_opencvdemos_TwoActivity_VIEW_MODE_RGBA 0L
#undef com_demo_opencvdemos_TwoActivity_VIEW_MODE_GRAY
#define com_demo_opencvdemos_TwoActivity_VIEW_MODE_GRAY 1L
#undef com_demo_opencvdemos_TwoActivity_VIEW_MODE_CANNY
#define com_demo_opencvdemos_TwoActivity_VIEW_MODE_CANNY 2L
#undef com_demo_opencvdemos_TwoActivity_VIEW_MODE_FEATURE
#define com_demo_opencvdemos_TwoActivity_VIEW_MODE_FEATURE 3L
/*
 * Class:     com_demo_opencvdemos_TwoActivity
 * Method:    findFeatures
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_demo_opencvdemos_TwoActivity_findFeatures
        (JNIEnv * env, jobject obj, jlong matAddrGray, jlong matAddrRgba)
{
    Mat& mGr  = *(Mat*)matAddrGray;
    Mat& mRgb = *(Mat*)matAddrRgba;
    vector<KeyPoint> v;

    Ptr<FeatureDetector> detector = FastFeatureDetector::create(50);
    detector->detect(mGr, v);
    for( unsigned int i = 0; i < v.size(); i++ )
    {
        const KeyPoint& kp = v[i];
        circle(mRgb, Point(kp.pt.x, kp.pt.y), 10, Scalar(255,0,0,255));
    }
}

#ifdef __cplusplus
}
#endif
